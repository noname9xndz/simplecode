
@inject IChatService ChatService


    <div class="col-3 users">    
        <div class='users-list p-2'>
            @if(null != _users){
                foreach (var user in _users)
                {
                    <p><span class='mr-1 status-@( (null != user.Client) ? "online" : "offline")'><i class="fa fa-user"></i></span>@user.Username</p>    
                }
            }
        </div>
    </div>

@code{
    private IEnumerable<User> _users;
    protected override void OnInitialized()
    {
        ChatService.UserLoggedIn += OnUserLoggedIn;
        ChatService.UserLoggedOut += OnUserLoggedOut;
        _users = this.ChatService.GetAllUsers();
    }

    private async void OnUserLoggedIn(object sender, UserLoginEventArgs args)
    {
        _users = this.ChatService.GetAllUsers();
        await InvokeAsync(StateHasChanged);
    }

    private async void OnUserLoggedOut(object sender, UserLogoutEventArgs args)
    {
        _users = this.ChatService.GetAllUsers();
        await InvokeAsync(StateHasChanged);
    }

    private void Dispose()
    {
        ChatService.UserLoggedIn -= OnUserLoggedIn;
        ChatService.UserLoggedOut -= OnUserLoggedOut;
    }
}