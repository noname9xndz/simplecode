apiVersion: apps/v1
kind: Deployment
metadata:
  name: catalog-v1
  namespace: {{ .Release.Namespace }}
  labels:
    app: catalog
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: catalog
      version: v1
  template:
    metadata:
      labels:
        transcode: http
        app: catalog
        version: v1
    spec:
      initContainers:
      - name: init-mongodb
        image: busybox
        command: ["sh", "-c", "while nc -z {{ .Values.catalogSettings.MongoDbHost }} {{ .Values.catalogSettings.MongoDbPort }}; do sleep 1; done"]
      containers:
      - name: catalog
        image: {{.Values.image.imageRegistry}}/cs-catalog-service:{{.Values.image.dockerTag}}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: NODE_ENV
          value: {{ .Values.catalogSettings.NodeEnv }}
        - name: PORT
          value: {{ .Values.catalogSettings.Port | quote }}
        - name: MONGO_DB_URI
          value: "mongodb://{{ .Values.catalogSettings.MongoDbHost }}:{{ .Values.catalogSettings.MongoDbPort }}/{{ .Values.catalogSettings.MongoDbName }}"
        ports:
        - containerPort: {{ .Values.catalogSettings.Port }}
        readinessProbe:
          initialDelaySeconds: 15
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:{{ .Values.catalogSettings.Port }}"]
        livenessProbe:
          initialDelaySeconds: 15
          periodSeconds: 10
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:{{ .Values.catalogSettings.Port }}"]
        # resources:
        #   requests:
        #     cpu: 70m
        #     memory: 128Mi
        #   limits:
        #     cpu: 250m
        #     memory: 256Mi
---
