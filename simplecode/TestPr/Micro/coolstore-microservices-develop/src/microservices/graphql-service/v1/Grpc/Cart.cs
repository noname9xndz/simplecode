// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: cart.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace VND.CoolStore.Services.Cart.v1.Grpc {

  /// <summary>Holder for reflection information generated from cart.proto</summary>
  public static partial class CartReflection {

    #region Descriptor
    /// <summary>File descriptor for cart.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CartReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgpjYXJ0LnByb3RvEgljb29sc3RvcmUaHGdvb2dsZS9hcGkvYW5ub3RhdGlv",
            "bnMucHJvdG8iQwoKUHJvZHVjdER0bxIKCgJpZBgBIAEoCRIMCgRuYW1lGAIg",
            "ASgJEgwKBGRlc2MYAyABKAkSDQoFcHJpY2UYBCABKAEi2AEKB0NhcnREdG8S",
            "CgoCaWQYASABKAkSFwoPY2FydF9pdGVtX3RvdGFsGAIgASgBEh8KF2NhcnRf",
            "aXRlbV9wcm9tb19zYXZpbmdzGAMgASgBEhYKDnNoaXBwaW5nX3RvdGFsGAQg",
            "ASgBEh4KFnNoaXBwaW5nX3Byb21vX3NhdmluZ3MYBSABKAESEgoKY2FydF90",
            "b3RhbBgGIAEoARIUCgxpc19jaGVja19vdXQYByABKAgSJQoFaXRlbXMYCCAD",
            "KAsyFi5jb29sc3RvcmUuQ2FydEl0ZW1EdG8ibwoLQ2FydEl0ZW1EdG8SEAoI",
            "cXVhbnRpdHkYASABKAUSDQoFcHJpY2UYAiABKAESFQoNcHJvbW9fc2F2aW5n",
            "cxgDIAEoARISCgpwcm9kdWN0X2lkGAQgASgJEhQKDHByb2R1Y3RfbmFtZRgF",
            "IAEoCSIhCg5HZXRDYXJ0UmVxdWVzdBIPCgdjYXJ0X2lkGAEgASgJIjUKD0dl",
            "dENhcnRSZXNwb25zZRIiCgZyZXN1bHQYASABKAsyEi5jb29sc3RvcmUuQ2Fy",
            "dER0byJCChpJbnNlcnRJdGVtVG9OZXdDYXJ0UmVxdWVzdBISCgpwcm9kdWN0",
            "X2lkGAEgASgJEhAKCHF1YW50aXR5GAIgASgFIkEKG0luc2VydEl0ZW1Ub05l",
            "d0NhcnRSZXNwb25zZRIiCgZyZXN1bHQYASABKAsyEi5jb29sc3RvcmUuQ2Fy",
            "dER0byJQChdVcGRhdGVJdGVtSW5DYXJ0UmVxdWVzdBIPCgdjYXJ0X2lkGAEg",
            "ASgJEhIKCnByb2R1Y3RfaWQYAiABKAkSEAoIcXVhbnRpdHkYAyABKAUiPgoY",
            "VXBkYXRlSXRlbUluQ2FydFJlc3BvbnNlEiIKBnJlc3VsdBgBIAEoCzISLmNv",
            "b2xzdG9yZS5DYXJ0RHRvIjgKEURlbGV0ZUl0ZW1SZXF1ZXN0Eg8KB2NhcnRf",
            "aWQYASABKAkSEgoKcHJvZHVjdF9pZBgCIAEoCSIoChJEZWxldGVJdGVtUmVz",
            "cG9uc2USEgoKcHJvZHVjdF9pZBgBIAEoCSIiCg9DaGVja291dFJlcXVlc3QS",
            "DwoHY2FydF9pZBgBIAEoCSImChBDaGVja291dFJlc3BvbnNlEhIKCmlzX3N1",
            "Y2NlZWQYASABKAgy4AQKC0NhcnRTZXJ2aWNlEmMKB0dldENhcnQSGS5jb29s",
            "c3RvcmUuR2V0Q2FydFJlcXVlc3QaGi5jb29sc3RvcmUuR2V0Q2FydFJlc3Bv",
            "bnNlIiGC0+STAhsSGS9jYXJ0L2FwaS9jYXJ0cy97Y2FydF9pZH0SgAEKE0lu",
            "c2VydEl0ZW1Ub05ld0NhcnQSJS5jb29sc3RvcmUuSW5zZXJ0SXRlbVRvTmV3",
            "Q2FydFJlcXVlc3QaJi5jb29sc3RvcmUuSW5zZXJ0SXRlbVRvTmV3Q2FydFJl",
            "c3BvbnNlIhqC0+STAhQiDy9jYXJ0L2FwaS9jYXJ0czoBKhJ3ChBVcGRhdGVJ",
            "dGVtSW5DYXJ0EiIuY29vbHN0b3JlLlVwZGF0ZUl0ZW1JbkNhcnRSZXF1ZXN0",
            "GiMuY29vbHN0b3JlLlVwZGF0ZUl0ZW1JbkNhcnRSZXNwb25zZSIagtPkkwIU",
            "Gg8vY2FydC9hcGkvY2FydHM6ASoSbwoIQ2hlY2tvdXQSGi5jb29sc3RvcmUu",
            "Q2hlY2tvdXRSZXF1ZXN0GhsuY29vbHN0b3JlLkNoZWNrb3V0UmVzcG9uc2Ui",
            "KoLT5JMCJBoiL2NhcnQvYXBpL2NhcnRzL3tjYXJ0X2lkfS9jaGVja291dBJ/",
            "CgpEZWxldGVJdGVtEhwuY29vbHN0b3JlLkRlbGV0ZUl0ZW1SZXF1ZXN0Gh0u",
            "Y29vbHN0b3JlLkRlbGV0ZUl0ZW1SZXNwb25zZSI0gtPkkwIuKiwvY2FydC9h",
            "cGkvY2FydHMve2NhcnRfaWR9L2l0ZW1zL3twcm9kdWN0X2lkfUImqgIjVk5E",
            "LkNvb2xTdG9yZS5TZXJ2aWNlcy5DYXJ0LnYxLkdycGNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::VND.CoolStore.Services.Cart.v1.Grpc.ProductDto), global::VND.CoolStore.Services.Cart.v1.Grpc.ProductDto.Parser, new[]{ "Id", "Name", "Desc", "Price" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VND.CoolStore.Services.Cart.v1.Grpc.CartDto), global::VND.CoolStore.Services.Cart.v1.Grpc.CartDto.Parser, new[]{ "Id", "CartItemTotal", "CartItemPromoSavings", "ShippingTotal", "ShippingPromoSavings", "CartTotal", "IsCheckOut", "Items" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VND.CoolStore.Services.Cart.v1.Grpc.CartItemDto), global::VND.CoolStore.Services.Cart.v1.Grpc.CartItemDto.Parser, new[]{ "Quantity", "Price", "PromoSavings", "ProductId", "ProductName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VND.CoolStore.Services.Cart.v1.Grpc.GetCartRequest), global::VND.CoolStore.Services.Cart.v1.Grpc.GetCartRequest.Parser, new[]{ "CartId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VND.CoolStore.Services.Cart.v1.Grpc.GetCartResponse), global::VND.CoolStore.Services.Cart.v1.Grpc.GetCartResponse.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VND.CoolStore.Services.Cart.v1.Grpc.InsertItemToNewCartRequest), global::VND.CoolStore.Services.Cart.v1.Grpc.InsertItemToNewCartRequest.Parser, new[]{ "ProductId", "Quantity" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VND.CoolStore.Services.Cart.v1.Grpc.InsertItemToNewCartResponse), global::VND.CoolStore.Services.Cart.v1.Grpc.InsertItemToNewCartResponse.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VND.CoolStore.Services.Cart.v1.Grpc.UpdateItemInCartRequest), global::VND.CoolStore.Services.Cart.v1.Grpc.UpdateItemInCartRequest.Parser, new[]{ "CartId", "ProductId", "Quantity" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VND.CoolStore.Services.Cart.v1.Grpc.UpdateItemInCartResponse), global::VND.CoolStore.Services.Cart.v1.Grpc.UpdateItemInCartResponse.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VND.CoolStore.Services.Cart.v1.Grpc.DeleteItemRequest), global::VND.CoolStore.Services.Cart.v1.Grpc.DeleteItemRequest.Parser, new[]{ "CartId", "ProductId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VND.CoolStore.Services.Cart.v1.Grpc.DeleteItemResponse), global::VND.CoolStore.Services.Cart.v1.Grpc.DeleteItemResponse.Parser, new[]{ "ProductId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VND.CoolStore.Services.Cart.v1.Grpc.CheckoutRequest), global::VND.CoolStore.Services.Cart.v1.Grpc.CheckoutRequest.Parser, new[]{ "CartId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VND.CoolStore.Services.Cart.v1.Grpc.CheckoutResponse), global::VND.CoolStore.Services.Cart.v1.Grpc.CheckoutResponse.Parser, new[]{ "IsSucceed" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ProductDto : pb::IMessage<ProductDto> {
    private static readonly pb::MessageParser<ProductDto> _parser = new pb::MessageParser<ProductDto>(() => new ProductDto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProductDto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VND.CoolStore.Services.Cart.v1.Grpc.CartReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductDto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductDto(ProductDto other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      desc_ = other.desc_;
      price_ = other.price_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductDto Clone() {
      return new ProductDto(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "desc" field.</summary>
    public const int DescFieldNumber = 3;
    private string desc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Desc {
      get { return desc_; }
      set {
        desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 4;
    private double price_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProductDto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProductDto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Desc != other.Desc) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Price, other.Price)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Desc.Length != 0) hash ^= Desc.GetHashCode();
      if (Price != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Price);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Desc);
      }
      if (Price != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Price);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Desc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
      }
      if (Price != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProductDto other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Desc.Length != 0) {
        Desc = other.Desc;
      }
      if (other.Price != 0D) {
        Price = other.Price;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Desc = input.ReadString();
            break;
          }
          case 33: {
            Price = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CartDto : pb::IMessage<CartDto> {
    private static readonly pb::MessageParser<CartDto> _parser = new pb::MessageParser<CartDto>(() => new CartDto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CartDto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VND.CoolStore.Services.Cart.v1.Grpc.CartReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CartDto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CartDto(CartDto other) : this() {
      id_ = other.id_;
      cartItemTotal_ = other.cartItemTotal_;
      cartItemPromoSavings_ = other.cartItemPromoSavings_;
      shippingTotal_ = other.shippingTotal_;
      shippingPromoSavings_ = other.shippingPromoSavings_;
      cartTotal_ = other.cartTotal_;
      isCheckOut_ = other.isCheckOut_;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CartDto Clone() {
      return new CartDto(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cart_item_total" field.</summary>
    public const int CartItemTotalFieldNumber = 2;
    private double cartItemTotal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double CartItemTotal {
      get { return cartItemTotal_; }
      set {
        cartItemTotal_ = value;
      }
    }

    /// <summary>Field number for the "cart_item_promo_savings" field.</summary>
    public const int CartItemPromoSavingsFieldNumber = 3;
    private double cartItemPromoSavings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double CartItemPromoSavings {
      get { return cartItemPromoSavings_; }
      set {
        cartItemPromoSavings_ = value;
      }
    }

    /// <summary>Field number for the "shipping_total" field.</summary>
    public const int ShippingTotalFieldNumber = 4;
    private double shippingTotal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double ShippingTotal {
      get { return shippingTotal_; }
      set {
        shippingTotal_ = value;
      }
    }

    /// <summary>Field number for the "shipping_promo_savings" field.</summary>
    public const int ShippingPromoSavingsFieldNumber = 5;
    private double shippingPromoSavings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double ShippingPromoSavings {
      get { return shippingPromoSavings_; }
      set {
        shippingPromoSavings_ = value;
      }
    }

    /// <summary>Field number for the "cart_total" field.</summary>
    public const int CartTotalFieldNumber = 6;
    private double cartTotal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double CartTotal {
      get { return cartTotal_; }
      set {
        cartTotal_ = value;
      }
    }

    /// <summary>Field number for the "is_check_out" field.</summary>
    public const int IsCheckOutFieldNumber = 7;
    private bool isCheckOut_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCheckOut {
      get { return isCheckOut_; }
      set {
        isCheckOut_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::VND.CoolStore.Services.Cart.v1.Grpc.CartItemDto> _repeated_items_codec
        = pb::FieldCodec.ForMessage(66, global::VND.CoolStore.Services.Cart.v1.Grpc.CartItemDto.Parser);
    private readonly pbc::RepeatedField<global::VND.CoolStore.Services.Cart.v1.Grpc.CartItemDto> items_ = new pbc::RepeatedField<global::VND.CoolStore.Services.Cart.v1.Grpc.CartItemDto>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::VND.CoolStore.Services.Cart.v1.Grpc.CartItemDto> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CartDto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CartDto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CartItemTotal, other.CartItemTotal)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CartItemPromoSavings, other.CartItemPromoSavings)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ShippingTotal, other.ShippingTotal)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ShippingPromoSavings, other.ShippingPromoSavings)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CartTotal, other.CartTotal)) return false;
      if (IsCheckOut != other.IsCheckOut) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (CartItemTotal != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CartItemTotal);
      if (CartItemPromoSavings != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CartItemPromoSavings);
      if (ShippingTotal != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ShippingTotal);
      if (ShippingPromoSavings != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ShippingPromoSavings);
      if (CartTotal != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CartTotal);
      if (IsCheckOut != false) hash ^= IsCheckOut.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (CartItemTotal != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(CartItemTotal);
      }
      if (CartItemPromoSavings != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(CartItemPromoSavings);
      }
      if (ShippingTotal != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(ShippingTotal);
      }
      if (ShippingPromoSavings != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(ShippingPromoSavings);
      }
      if (CartTotal != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(CartTotal);
      }
      if (IsCheckOut != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsCheckOut);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (CartItemTotal != 0D) {
        size += 1 + 8;
      }
      if (CartItemPromoSavings != 0D) {
        size += 1 + 8;
      }
      if (ShippingTotal != 0D) {
        size += 1 + 8;
      }
      if (ShippingPromoSavings != 0D) {
        size += 1 + 8;
      }
      if (CartTotal != 0D) {
        size += 1 + 8;
      }
      if (IsCheckOut != false) {
        size += 1 + 1;
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CartDto other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.CartItemTotal != 0D) {
        CartItemTotal = other.CartItemTotal;
      }
      if (other.CartItemPromoSavings != 0D) {
        CartItemPromoSavings = other.CartItemPromoSavings;
      }
      if (other.ShippingTotal != 0D) {
        ShippingTotal = other.ShippingTotal;
      }
      if (other.ShippingPromoSavings != 0D) {
        ShippingPromoSavings = other.ShippingPromoSavings;
      }
      if (other.CartTotal != 0D) {
        CartTotal = other.CartTotal;
      }
      if (other.IsCheckOut != false) {
        IsCheckOut = other.IsCheckOut;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 17: {
            CartItemTotal = input.ReadDouble();
            break;
          }
          case 25: {
            CartItemPromoSavings = input.ReadDouble();
            break;
          }
          case 33: {
            ShippingTotal = input.ReadDouble();
            break;
          }
          case 41: {
            ShippingPromoSavings = input.ReadDouble();
            break;
          }
          case 49: {
            CartTotal = input.ReadDouble();
            break;
          }
          case 56: {
            IsCheckOut = input.ReadBool();
            break;
          }
          case 66: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CartItemDto : pb::IMessage<CartItemDto> {
    private static readonly pb::MessageParser<CartItemDto> _parser = new pb::MessageParser<CartItemDto>(() => new CartItemDto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CartItemDto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VND.CoolStore.Services.Cart.v1.Grpc.CartReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CartItemDto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CartItemDto(CartItemDto other) : this() {
      quantity_ = other.quantity_;
      price_ = other.price_;
      promoSavings_ = other.promoSavings_;
      productId_ = other.productId_;
      productName_ = other.productName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CartItemDto Clone() {
      return new CartItemDto(this);
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 1;
    private int quantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Quantity {
      get { return quantity_; }
      set {
        quantity_ = value;
      }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 2;
    private double price_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    /// <summary>Field number for the "promo_savings" field.</summary>
    public const int PromoSavingsFieldNumber = 3;
    private double promoSavings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double PromoSavings {
      get { return promoSavings_; }
      set {
        promoSavings_ = value;
      }
    }

    /// <summary>Field number for the "product_id" field.</summary>
    public const int ProductIdFieldNumber = 4;
    private string productId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProductId {
      get { return productId_; }
      set {
        productId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "product_name" field.</summary>
    public const int ProductNameFieldNumber = 5;
    private string productName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProductName {
      get { return productName_; }
      set {
        productName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CartItemDto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CartItemDto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Quantity != other.Quantity) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Price, other.Price)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PromoSavings, other.PromoSavings)) return false;
      if (ProductId != other.ProductId) return false;
      if (ProductName != other.ProductName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Quantity != 0) hash ^= Quantity.GetHashCode();
      if (Price != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Price);
      if (PromoSavings != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PromoSavings);
      if (ProductId.Length != 0) hash ^= ProductId.GetHashCode();
      if (ProductName.Length != 0) hash ^= ProductName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Quantity != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Quantity);
      }
      if (Price != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Price);
      }
      if (PromoSavings != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(PromoSavings);
      }
      if (ProductId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ProductId);
      }
      if (ProductName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ProductName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Quantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Quantity);
      }
      if (Price != 0D) {
        size += 1 + 8;
      }
      if (PromoSavings != 0D) {
        size += 1 + 8;
      }
      if (ProductId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProductId);
      }
      if (ProductName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProductName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CartItemDto other) {
      if (other == null) {
        return;
      }
      if (other.Quantity != 0) {
        Quantity = other.Quantity;
      }
      if (other.Price != 0D) {
        Price = other.Price;
      }
      if (other.PromoSavings != 0D) {
        PromoSavings = other.PromoSavings;
      }
      if (other.ProductId.Length != 0) {
        ProductId = other.ProductId;
      }
      if (other.ProductName.Length != 0) {
        ProductName = other.ProductName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Quantity = input.ReadInt32();
            break;
          }
          case 17: {
            Price = input.ReadDouble();
            break;
          }
          case 25: {
            PromoSavings = input.ReadDouble();
            break;
          }
          case 34: {
            ProductId = input.ReadString();
            break;
          }
          case 42: {
            ProductName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetCartRequest : pb::IMessage<GetCartRequest> {
    private static readonly pb::MessageParser<GetCartRequest> _parser = new pb::MessageParser<GetCartRequest>(() => new GetCartRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetCartRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VND.CoolStore.Services.Cart.v1.Grpc.CartReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCartRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCartRequest(GetCartRequest other) : this() {
      cartId_ = other.cartId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCartRequest Clone() {
      return new GetCartRequest(this);
    }

    /// <summary>Field number for the "cart_id" field.</summary>
    public const int CartIdFieldNumber = 1;
    private string cartId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CartId {
      get { return cartId_; }
      set {
        cartId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetCartRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetCartRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CartId != other.CartId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CartId.Length != 0) hash ^= CartId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CartId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CartId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CartId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CartId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetCartRequest other) {
      if (other == null) {
        return;
      }
      if (other.CartId.Length != 0) {
        CartId = other.CartId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CartId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetCartResponse : pb::IMessage<GetCartResponse> {
    private static readonly pb::MessageParser<GetCartResponse> _parser = new pb::MessageParser<GetCartResponse>(() => new GetCartResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetCartResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VND.CoolStore.Services.Cart.v1.Grpc.CartReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCartResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCartResponse(GetCartResponse other) : this() {
      result_ = other.result_ != null ? other.result_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCartResponse Clone() {
      return new GetCartResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::VND.CoolStore.Services.Cart.v1.Grpc.CartDto result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VND.CoolStore.Services.Cart.v1.Grpc.CartDto Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetCartResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetCartResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Result, other.Result)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (result_ != null) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (result_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetCartResponse other) {
      if (other == null) {
        return;
      }
      if (other.result_ != null) {
        if (result_ == null) {
          result_ = new global::VND.CoolStore.Services.Cart.v1.Grpc.CartDto();
        }
        Result.MergeFrom(other.Result);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (result_ == null) {
              result_ = new global::VND.CoolStore.Services.Cart.v1.Grpc.CartDto();
            }
            input.ReadMessage(result_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class InsertItemToNewCartRequest : pb::IMessage<InsertItemToNewCartRequest> {
    private static readonly pb::MessageParser<InsertItemToNewCartRequest> _parser = new pb::MessageParser<InsertItemToNewCartRequest>(() => new InsertItemToNewCartRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InsertItemToNewCartRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VND.CoolStore.Services.Cart.v1.Grpc.CartReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertItemToNewCartRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertItemToNewCartRequest(InsertItemToNewCartRequest other) : this() {
      productId_ = other.productId_;
      quantity_ = other.quantity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertItemToNewCartRequest Clone() {
      return new InsertItemToNewCartRequest(this);
    }

    /// <summary>Field number for the "product_id" field.</summary>
    public const int ProductIdFieldNumber = 1;
    private string productId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProductId {
      get { return productId_; }
      set {
        productId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 2;
    private int quantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Quantity {
      get { return quantity_; }
      set {
        quantity_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InsertItemToNewCartRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InsertItemToNewCartRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProductId != other.ProductId) return false;
      if (Quantity != other.Quantity) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProductId.Length != 0) hash ^= ProductId.GetHashCode();
      if (Quantity != 0) hash ^= Quantity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProductId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProductId);
      }
      if (Quantity != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Quantity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProductId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProductId);
      }
      if (Quantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Quantity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InsertItemToNewCartRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProductId.Length != 0) {
        ProductId = other.ProductId;
      }
      if (other.Quantity != 0) {
        Quantity = other.Quantity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProductId = input.ReadString();
            break;
          }
          case 16: {
            Quantity = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InsertItemToNewCartResponse : pb::IMessage<InsertItemToNewCartResponse> {
    private static readonly pb::MessageParser<InsertItemToNewCartResponse> _parser = new pb::MessageParser<InsertItemToNewCartResponse>(() => new InsertItemToNewCartResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InsertItemToNewCartResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VND.CoolStore.Services.Cart.v1.Grpc.CartReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertItemToNewCartResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertItemToNewCartResponse(InsertItemToNewCartResponse other) : this() {
      result_ = other.result_ != null ? other.result_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertItemToNewCartResponse Clone() {
      return new InsertItemToNewCartResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::VND.CoolStore.Services.Cart.v1.Grpc.CartDto result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VND.CoolStore.Services.Cart.v1.Grpc.CartDto Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InsertItemToNewCartResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InsertItemToNewCartResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Result, other.Result)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (result_ != null) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (result_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InsertItemToNewCartResponse other) {
      if (other == null) {
        return;
      }
      if (other.result_ != null) {
        if (result_ == null) {
          result_ = new global::VND.CoolStore.Services.Cart.v1.Grpc.CartDto();
        }
        Result.MergeFrom(other.Result);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (result_ == null) {
              result_ = new global::VND.CoolStore.Services.Cart.v1.Grpc.CartDto();
            }
            input.ReadMessage(result_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateItemInCartRequest : pb::IMessage<UpdateItemInCartRequest> {
    private static readonly pb::MessageParser<UpdateItemInCartRequest> _parser = new pb::MessageParser<UpdateItemInCartRequest>(() => new UpdateItemInCartRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateItemInCartRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VND.CoolStore.Services.Cart.v1.Grpc.CartReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateItemInCartRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateItemInCartRequest(UpdateItemInCartRequest other) : this() {
      cartId_ = other.cartId_;
      productId_ = other.productId_;
      quantity_ = other.quantity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateItemInCartRequest Clone() {
      return new UpdateItemInCartRequest(this);
    }

    /// <summary>Field number for the "cart_id" field.</summary>
    public const int CartIdFieldNumber = 1;
    private string cartId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CartId {
      get { return cartId_; }
      set {
        cartId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "product_id" field.</summary>
    public const int ProductIdFieldNumber = 2;
    private string productId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProductId {
      get { return productId_; }
      set {
        productId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 3;
    private int quantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Quantity {
      get { return quantity_; }
      set {
        quantity_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateItemInCartRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateItemInCartRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CartId != other.CartId) return false;
      if (ProductId != other.ProductId) return false;
      if (Quantity != other.Quantity) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CartId.Length != 0) hash ^= CartId.GetHashCode();
      if (ProductId.Length != 0) hash ^= ProductId.GetHashCode();
      if (Quantity != 0) hash ^= Quantity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CartId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CartId);
      }
      if (ProductId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ProductId);
      }
      if (Quantity != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Quantity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CartId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CartId);
      }
      if (ProductId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProductId);
      }
      if (Quantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Quantity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateItemInCartRequest other) {
      if (other == null) {
        return;
      }
      if (other.CartId.Length != 0) {
        CartId = other.CartId;
      }
      if (other.ProductId.Length != 0) {
        ProductId = other.ProductId;
      }
      if (other.Quantity != 0) {
        Quantity = other.Quantity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CartId = input.ReadString();
            break;
          }
          case 18: {
            ProductId = input.ReadString();
            break;
          }
          case 24: {
            Quantity = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateItemInCartResponse : pb::IMessage<UpdateItemInCartResponse> {
    private static readonly pb::MessageParser<UpdateItemInCartResponse> _parser = new pb::MessageParser<UpdateItemInCartResponse>(() => new UpdateItemInCartResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateItemInCartResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VND.CoolStore.Services.Cart.v1.Grpc.CartReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateItemInCartResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateItemInCartResponse(UpdateItemInCartResponse other) : this() {
      result_ = other.result_ != null ? other.result_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateItemInCartResponse Clone() {
      return new UpdateItemInCartResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::VND.CoolStore.Services.Cart.v1.Grpc.CartDto result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VND.CoolStore.Services.Cart.v1.Grpc.CartDto Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateItemInCartResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateItemInCartResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Result, other.Result)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (result_ != null) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (result_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateItemInCartResponse other) {
      if (other == null) {
        return;
      }
      if (other.result_ != null) {
        if (result_ == null) {
          result_ = new global::VND.CoolStore.Services.Cart.v1.Grpc.CartDto();
        }
        Result.MergeFrom(other.Result);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (result_ == null) {
              result_ = new global::VND.CoolStore.Services.Cart.v1.Grpc.CartDto();
            }
            input.ReadMessage(result_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteItemRequest : pb::IMessage<DeleteItemRequest> {
    private static readonly pb::MessageParser<DeleteItemRequest> _parser = new pb::MessageParser<DeleteItemRequest>(() => new DeleteItemRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteItemRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VND.CoolStore.Services.Cart.v1.Grpc.CartReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteItemRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteItemRequest(DeleteItemRequest other) : this() {
      cartId_ = other.cartId_;
      productId_ = other.productId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteItemRequest Clone() {
      return new DeleteItemRequest(this);
    }

    /// <summary>Field number for the "cart_id" field.</summary>
    public const int CartIdFieldNumber = 1;
    private string cartId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CartId {
      get { return cartId_; }
      set {
        cartId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "product_id" field.</summary>
    public const int ProductIdFieldNumber = 2;
    private string productId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProductId {
      get { return productId_; }
      set {
        productId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteItemRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteItemRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CartId != other.CartId) return false;
      if (ProductId != other.ProductId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CartId.Length != 0) hash ^= CartId.GetHashCode();
      if (ProductId.Length != 0) hash ^= ProductId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CartId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CartId);
      }
      if (ProductId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ProductId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CartId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CartId);
      }
      if (ProductId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProductId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteItemRequest other) {
      if (other == null) {
        return;
      }
      if (other.CartId.Length != 0) {
        CartId = other.CartId;
      }
      if (other.ProductId.Length != 0) {
        ProductId = other.ProductId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CartId = input.ReadString();
            break;
          }
          case 18: {
            ProductId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteItemResponse : pb::IMessage<DeleteItemResponse> {
    private static readonly pb::MessageParser<DeleteItemResponse> _parser = new pb::MessageParser<DeleteItemResponse>(() => new DeleteItemResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteItemResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VND.CoolStore.Services.Cart.v1.Grpc.CartReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteItemResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteItemResponse(DeleteItemResponse other) : this() {
      productId_ = other.productId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteItemResponse Clone() {
      return new DeleteItemResponse(this);
    }

    /// <summary>Field number for the "product_id" field.</summary>
    public const int ProductIdFieldNumber = 1;
    private string productId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProductId {
      get { return productId_; }
      set {
        productId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteItemResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteItemResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProductId != other.ProductId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProductId.Length != 0) hash ^= ProductId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProductId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProductId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProductId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProductId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteItemResponse other) {
      if (other == null) {
        return;
      }
      if (other.ProductId.Length != 0) {
        ProductId = other.ProductId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProductId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CheckoutRequest : pb::IMessage<CheckoutRequest> {
    private static readonly pb::MessageParser<CheckoutRequest> _parser = new pb::MessageParser<CheckoutRequest>(() => new CheckoutRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CheckoutRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VND.CoolStore.Services.Cart.v1.Grpc.CartReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckoutRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckoutRequest(CheckoutRequest other) : this() {
      cartId_ = other.cartId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckoutRequest Clone() {
      return new CheckoutRequest(this);
    }

    /// <summary>Field number for the "cart_id" field.</summary>
    public const int CartIdFieldNumber = 1;
    private string cartId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CartId {
      get { return cartId_; }
      set {
        cartId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CheckoutRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CheckoutRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CartId != other.CartId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CartId.Length != 0) hash ^= CartId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CartId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CartId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CartId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CartId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CheckoutRequest other) {
      if (other == null) {
        return;
      }
      if (other.CartId.Length != 0) {
        CartId = other.CartId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CartId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CheckoutResponse : pb::IMessage<CheckoutResponse> {
    private static readonly pb::MessageParser<CheckoutResponse> _parser = new pb::MessageParser<CheckoutResponse>(() => new CheckoutResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CheckoutResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VND.CoolStore.Services.Cart.v1.Grpc.CartReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckoutResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckoutResponse(CheckoutResponse other) : this() {
      isSucceed_ = other.isSucceed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckoutResponse Clone() {
      return new CheckoutResponse(this);
    }

    /// <summary>Field number for the "is_succeed" field.</summary>
    public const int IsSucceedFieldNumber = 1;
    private bool isSucceed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSucceed {
      get { return isSucceed_; }
      set {
        isSucceed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CheckoutResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CheckoutResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsSucceed != other.IsSucceed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsSucceed != false) hash ^= IsSucceed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsSucceed != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsSucceed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsSucceed != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CheckoutResponse other) {
      if (other == null) {
        return;
      }
      if (other.IsSucceed != false) {
        IsSucceed = other.IsSucceed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsSucceed = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
