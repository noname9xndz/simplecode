// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: cart.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace VND.CoolStore.Services.Cart.v1.Grpc {
  public static partial class CartService
  {
    static readonly string __ServiceName = "coolstore.CartService";

    static readonly grpc::Marshaller<global::VND.CoolStore.Services.Cart.v1.Grpc.GetCartRequest> __Marshaller_coolstore_GetCartRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::VND.CoolStore.Services.Cart.v1.Grpc.GetCartRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::VND.CoolStore.Services.Cart.v1.Grpc.GetCartResponse> __Marshaller_coolstore_GetCartResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::VND.CoolStore.Services.Cart.v1.Grpc.GetCartResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::VND.CoolStore.Services.Cart.v1.Grpc.InsertItemToNewCartRequest> __Marshaller_coolstore_InsertItemToNewCartRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::VND.CoolStore.Services.Cart.v1.Grpc.InsertItemToNewCartRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::VND.CoolStore.Services.Cart.v1.Grpc.InsertItemToNewCartResponse> __Marshaller_coolstore_InsertItemToNewCartResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::VND.CoolStore.Services.Cart.v1.Grpc.InsertItemToNewCartResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::VND.CoolStore.Services.Cart.v1.Grpc.UpdateItemInCartRequest> __Marshaller_coolstore_UpdateItemInCartRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::VND.CoolStore.Services.Cart.v1.Grpc.UpdateItemInCartRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::VND.CoolStore.Services.Cart.v1.Grpc.UpdateItemInCartResponse> __Marshaller_coolstore_UpdateItemInCartResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::VND.CoolStore.Services.Cart.v1.Grpc.UpdateItemInCartResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::VND.CoolStore.Services.Cart.v1.Grpc.CheckoutRequest> __Marshaller_coolstore_CheckoutRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::VND.CoolStore.Services.Cart.v1.Grpc.CheckoutRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::VND.CoolStore.Services.Cart.v1.Grpc.CheckoutResponse> __Marshaller_coolstore_CheckoutResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::VND.CoolStore.Services.Cart.v1.Grpc.CheckoutResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::VND.CoolStore.Services.Cart.v1.Grpc.DeleteItemRequest> __Marshaller_coolstore_DeleteItemRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::VND.CoolStore.Services.Cart.v1.Grpc.DeleteItemRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::VND.CoolStore.Services.Cart.v1.Grpc.DeleteItemResponse> __Marshaller_coolstore_DeleteItemResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::VND.CoolStore.Services.Cart.v1.Grpc.DeleteItemResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::VND.CoolStore.Services.Cart.v1.Grpc.GetCartRequest, global::VND.CoolStore.Services.Cart.v1.Grpc.GetCartResponse> __Method_GetCart = new grpc::Method<global::VND.CoolStore.Services.Cart.v1.Grpc.GetCartRequest, global::VND.CoolStore.Services.Cart.v1.Grpc.GetCartResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCart",
        __Marshaller_coolstore_GetCartRequest,
        __Marshaller_coolstore_GetCartResponse);

    static readonly grpc::Method<global::VND.CoolStore.Services.Cart.v1.Grpc.InsertItemToNewCartRequest, global::VND.CoolStore.Services.Cart.v1.Grpc.InsertItemToNewCartResponse> __Method_InsertItemToNewCart = new grpc::Method<global::VND.CoolStore.Services.Cart.v1.Grpc.InsertItemToNewCartRequest, global::VND.CoolStore.Services.Cart.v1.Grpc.InsertItemToNewCartResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "InsertItemToNewCart",
        __Marshaller_coolstore_InsertItemToNewCartRequest,
        __Marshaller_coolstore_InsertItemToNewCartResponse);

    static readonly grpc::Method<global::VND.CoolStore.Services.Cart.v1.Grpc.UpdateItemInCartRequest, global::VND.CoolStore.Services.Cart.v1.Grpc.UpdateItemInCartResponse> __Method_UpdateItemInCart = new grpc::Method<global::VND.CoolStore.Services.Cart.v1.Grpc.UpdateItemInCartRequest, global::VND.CoolStore.Services.Cart.v1.Grpc.UpdateItemInCartResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateItemInCart",
        __Marshaller_coolstore_UpdateItemInCartRequest,
        __Marshaller_coolstore_UpdateItemInCartResponse);

    static readonly grpc::Method<global::VND.CoolStore.Services.Cart.v1.Grpc.CheckoutRequest, global::VND.CoolStore.Services.Cart.v1.Grpc.CheckoutResponse> __Method_Checkout = new grpc::Method<global::VND.CoolStore.Services.Cart.v1.Grpc.CheckoutRequest, global::VND.CoolStore.Services.Cart.v1.Grpc.CheckoutResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Checkout",
        __Marshaller_coolstore_CheckoutRequest,
        __Marshaller_coolstore_CheckoutResponse);

    static readonly grpc::Method<global::VND.CoolStore.Services.Cart.v1.Grpc.DeleteItemRequest, global::VND.CoolStore.Services.Cart.v1.Grpc.DeleteItemResponse> __Method_DeleteItem = new grpc::Method<global::VND.CoolStore.Services.Cart.v1.Grpc.DeleteItemRequest, global::VND.CoolStore.Services.Cart.v1.Grpc.DeleteItemResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteItem",
        __Marshaller_coolstore_DeleteItemRequest,
        __Marshaller_coolstore_DeleteItemResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::VND.CoolStore.Services.Cart.v1.Grpc.CartReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of CartService</summary>
    public abstract partial class CartServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::VND.CoolStore.Services.Cart.v1.Grpc.GetCartResponse> GetCart(global::VND.CoolStore.Services.Cart.v1.Grpc.GetCartRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::VND.CoolStore.Services.Cart.v1.Grpc.InsertItemToNewCartResponse> InsertItemToNewCart(global::VND.CoolStore.Services.Cart.v1.Grpc.InsertItemToNewCartRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::VND.CoolStore.Services.Cart.v1.Grpc.UpdateItemInCartResponse> UpdateItemInCart(global::VND.CoolStore.Services.Cart.v1.Grpc.UpdateItemInCartRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::VND.CoolStore.Services.Cart.v1.Grpc.CheckoutResponse> Checkout(global::VND.CoolStore.Services.Cart.v1.Grpc.CheckoutRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::VND.CoolStore.Services.Cart.v1.Grpc.DeleteItemResponse> DeleteItem(global::VND.CoolStore.Services.Cart.v1.Grpc.DeleteItemRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for CartService</summary>
    public partial class CartServiceClient : grpc::ClientBase<CartServiceClient>
    {
      /// <summary>Creates a new client for CartService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public CartServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for CartService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public CartServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected CartServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected CartServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::VND.CoolStore.Services.Cart.v1.Grpc.GetCartResponse GetCart(global::VND.CoolStore.Services.Cart.v1.Grpc.GetCartRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCart(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::VND.CoolStore.Services.Cart.v1.Grpc.GetCartResponse GetCart(global::VND.CoolStore.Services.Cart.v1.Grpc.GetCartRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCart, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::VND.CoolStore.Services.Cart.v1.Grpc.GetCartResponse> GetCartAsync(global::VND.CoolStore.Services.Cart.v1.Grpc.GetCartRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCartAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::VND.CoolStore.Services.Cart.v1.Grpc.GetCartResponse> GetCartAsync(global::VND.CoolStore.Services.Cart.v1.Grpc.GetCartRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCart, null, options, request);
      }
      public virtual global::VND.CoolStore.Services.Cart.v1.Grpc.InsertItemToNewCartResponse InsertItemToNewCart(global::VND.CoolStore.Services.Cart.v1.Grpc.InsertItemToNewCartRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InsertItemToNewCart(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::VND.CoolStore.Services.Cart.v1.Grpc.InsertItemToNewCartResponse InsertItemToNewCart(global::VND.CoolStore.Services.Cart.v1.Grpc.InsertItemToNewCartRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_InsertItemToNewCart, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::VND.CoolStore.Services.Cart.v1.Grpc.InsertItemToNewCartResponse> InsertItemToNewCartAsync(global::VND.CoolStore.Services.Cart.v1.Grpc.InsertItemToNewCartRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InsertItemToNewCartAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::VND.CoolStore.Services.Cart.v1.Grpc.InsertItemToNewCartResponse> InsertItemToNewCartAsync(global::VND.CoolStore.Services.Cart.v1.Grpc.InsertItemToNewCartRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_InsertItemToNewCart, null, options, request);
      }
      public virtual global::VND.CoolStore.Services.Cart.v1.Grpc.UpdateItemInCartResponse UpdateItemInCart(global::VND.CoolStore.Services.Cart.v1.Grpc.UpdateItemInCartRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateItemInCart(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::VND.CoolStore.Services.Cart.v1.Grpc.UpdateItemInCartResponse UpdateItemInCart(global::VND.CoolStore.Services.Cart.v1.Grpc.UpdateItemInCartRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateItemInCart, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::VND.CoolStore.Services.Cart.v1.Grpc.UpdateItemInCartResponse> UpdateItemInCartAsync(global::VND.CoolStore.Services.Cart.v1.Grpc.UpdateItemInCartRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateItemInCartAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::VND.CoolStore.Services.Cart.v1.Grpc.UpdateItemInCartResponse> UpdateItemInCartAsync(global::VND.CoolStore.Services.Cart.v1.Grpc.UpdateItemInCartRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateItemInCart, null, options, request);
      }
      public virtual global::VND.CoolStore.Services.Cart.v1.Grpc.CheckoutResponse Checkout(global::VND.CoolStore.Services.Cart.v1.Grpc.CheckoutRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Checkout(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::VND.CoolStore.Services.Cart.v1.Grpc.CheckoutResponse Checkout(global::VND.CoolStore.Services.Cart.v1.Grpc.CheckoutRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Checkout, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::VND.CoolStore.Services.Cart.v1.Grpc.CheckoutResponse> CheckoutAsync(global::VND.CoolStore.Services.Cart.v1.Grpc.CheckoutRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckoutAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::VND.CoolStore.Services.Cart.v1.Grpc.CheckoutResponse> CheckoutAsync(global::VND.CoolStore.Services.Cart.v1.Grpc.CheckoutRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Checkout, null, options, request);
      }
      public virtual global::VND.CoolStore.Services.Cart.v1.Grpc.DeleteItemResponse DeleteItem(global::VND.CoolStore.Services.Cart.v1.Grpc.DeleteItemRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteItem(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::VND.CoolStore.Services.Cart.v1.Grpc.DeleteItemResponse DeleteItem(global::VND.CoolStore.Services.Cart.v1.Grpc.DeleteItemRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteItem, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::VND.CoolStore.Services.Cart.v1.Grpc.DeleteItemResponse> DeleteItemAsync(global::VND.CoolStore.Services.Cart.v1.Grpc.DeleteItemRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteItemAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::VND.CoolStore.Services.Cart.v1.Grpc.DeleteItemResponse> DeleteItemAsync(global::VND.CoolStore.Services.Cart.v1.Grpc.DeleteItemRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteItem, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override CartServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new CartServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(CartServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetCart, serviceImpl.GetCart)
          .AddMethod(__Method_InsertItemToNewCart, serviceImpl.InsertItemToNewCart)
          .AddMethod(__Method_UpdateItemInCart, serviceImpl.UpdateItemInCart)
          .AddMethod(__Method_Checkout, serviceImpl.Checkout)
          .AddMethod(__Method_DeleteItem, serviceImpl.DeleteItem).Build();
    }

    /// <summary>Register service method implementations with a service binder. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, CartServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetCart, serviceImpl.GetCart);
      serviceBinder.AddMethod(__Method_InsertItemToNewCart, serviceImpl.InsertItemToNewCart);
      serviceBinder.AddMethod(__Method_UpdateItemInCart, serviceImpl.UpdateItemInCart);
      serviceBinder.AddMethod(__Method_Checkout, serviceImpl.Checkout);
      serviceBinder.AddMethod(__Method_DeleteItem, serviceImpl.DeleteItem);
    }

  }
}
#endregion
