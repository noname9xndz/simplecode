// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: inventory.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace VND.CoolStore.Services.Inventory.v1.Grpc {
  public static partial class InventoryService
  {
    static readonly string __ServiceName = "coolstore.InventoryService";

    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::VND.CoolStore.Services.Inventory.v1.Grpc.GetInventoriesResponse> __Marshaller_coolstore_GetInventoriesResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::VND.CoolStore.Services.Inventory.v1.Grpc.GetInventoriesResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::VND.CoolStore.Services.Inventory.v1.Grpc.GetInventoryRequest> __Marshaller_coolstore_GetInventoryRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::VND.CoolStore.Services.Inventory.v1.Grpc.GetInventoryRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::VND.CoolStore.Services.Inventory.v1.Grpc.GetInventoryResponse> __Marshaller_coolstore_GetInventoryResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::VND.CoolStore.Services.Inventory.v1.Grpc.GetInventoryResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::VND.CoolStore.Services.Inventory.v1.Grpc.DbMigrationResponse> __Marshaller_coolstore_DbMigrationResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::VND.CoolStore.Services.Inventory.v1.Grpc.DbMigrationResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::VND.CoolStore.Services.Inventory.v1.Grpc.GetInventoriesResponse> __Method_GetInventories = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::VND.CoolStore.Services.Inventory.v1.Grpc.GetInventoriesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetInventories",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_coolstore_GetInventoriesResponse);

    static readonly grpc::Method<global::VND.CoolStore.Services.Inventory.v1.Grpc.GetInventoryRequest, global::VND.CoolStore.Services.Inventory.v1.Grpc.GetInventoryResponse> __Method_GetInventory = new grpc::Method<global::VND.CoolStore.Services.Inventory.v1.Grpc.GetInventoryRequest, global::VND.CoolStore.Services.Inventory.v1.Grpc.GetInventoryResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetInventory",
        __Marshaller_coolstore_GetInventoryRequest,
        __Marshaller_coolstore_GetInventoryResponse);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::VND.CoolStore.Services.Inventory.v1.Grpc.DbMigrationResponse> __Method_DbMigration = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::VND.CoolStore.Services.Inventory.v1.Grpc.DbMigrationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DbMigration",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_coolstore_DbMigrationResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::VND.CoolStore.Services.Inventory.v1.Grpc.InventoryReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of InventoryService</summary>
    public abstract partial class InventoryServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::VND.CoolStore.Services.Inventory.v1.Grpc.GetInventoriesResponse> GetInventories(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::VND.CoolStore.Services.Inventory.v1.Grpc.GetInventoryResponse> GetInventory(global::VND.CoolStore.Services.Inventory.v1.Grpc.GetInventoryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::VND.CoolStore.Services.Inventory.v1.Grpc.DbMigrationResponse> DbMigration(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for InventoryService</summary>
    public partial class InventoryServiceClient : grpc::ClientBase<InventoryServiceClient>
    {
      /// <summary>Creates a new client for InventoryService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public InventoryServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for InventoryService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public InventoryServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected InventoryServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected InventoryServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::VND.CoolStore.Services.Inventory.v1.Grpc.GetInventoriesResponse GetInventories(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetInventories(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::VND.CoolStore.Services.Inventory.v1.Grpc.GetInventoriesResponse GetInventories(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetInventories, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::VND.CoolStore.Services.Inventory.v1.Grpc.GetInventoriesResponse> GetInventoriesAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetInventoriesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::VND.CoolStore.Services.Inventory.v1.Grpc.GetInventoriesResponse> GetInventoriesAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetInventories, null, options, request);
      }
      public virtual global::VND.CoolStore.Services.Inventory.v1.Grpc.GetInventoryResponse GetInventory(global::VND.CoolStore.Services.Inventory.v1.Grpc.GetInventoryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetInventory(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::VND.CoolStore.Services.Inventory.v1.Grpc.GetInventoryResponse GetInventory(global::VND.CoolStore.Services.Inventory.v1.Grpc.GetInventoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetInventory, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::VND.CoolStore.Services.Inventory.v1.Grpc.GetInventoryResponse> GetInventoryAsync(global::VND.CoolStore.Services.Inventory.v1.Grpc.GetInventoryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetInventoryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::VND.CoolStore.Services.Inventory.v1.Grpc.GetInventoryResponse> GetInventoryAsync(global::VND.CoolStore.Services.Inventory.v1.Grpc.GetInventoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetInventory, null, options, request);
      }
      public virtual global::VND.CoolStore.Services.Inventory.v1.Grpc.DbMigrationResponse DbMigration(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DbMigration(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::VND.CoolStore.Services.Inventory.v1.Grpc.DbMigrationResponse DbMigration(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DbMigration, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::VND.CoolStore.Services.Inventory.v1.Grpc.DbMigrationResponse> DbMigrationAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DbMigrationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::VND.CoolStore.Services.Inventory.v1.Grpc.DbMigrationResponse> DbMigrationAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DbMigration, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override InventoryServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new InventoryServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(InventoryServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetInventories, serviceImpl.GetInventories)
          .AddMethod(__Method_GetInventory, serviceImpl.GetInventory)
          .AddMethod(__Method_DbMigration, serviceImpl.DbMigration).Build();
    }

    /// <summary>Register service method implementations with a service binder. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, InventoryServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetInventories, serviceImpl.GetInventories);
      serviceBinder.AddMethod(__Method_GetInventory, serviceImpl.GetInventory);
      serviceBinder.AddMethod(__Method_DbMigration, serviceImpl.DbMigration);
    }

  }
}
#endregion
